
px = {
{7,1},
{8,1},
{7,3},
{8,3},
{9,1},
{9,2},
{9,4},
{9,3},
{11,4},
{11,3},
{11,2},
{11,1},
{13,2},
{11,4},
{11,5},
{9,5},
{7,2},
{7,4},
{7,5},
{12,1},
{14,1},
{15,1},
{15,2},
{15,3},
{15,4},
{15,5},
{17,5},
{18,5},
{17,4},
{17,3},
{18,3},
{19,5},
{17,2},
{17,1},
{18,1},
{19,1},
{21,1},
{21,2},
{21,3},
{21,3},
{21,4},
{21,5},
{23,5},
{22,5},
{23,4},
{23,3},
{23,2},
{23,1},
{22,1},
{25,1},
{25,2},
{25,3},
{25,4},
{25,5},
{26,5},
{27,5},
{27,4},
{27,3},
{27,2},
{27,1},
{31,1},
{30,1},
{29,1},
{29,2},
{29,3},
{30,3},
{31,3},
{31,4},
{31,5},
{31,5},
{30,5},
{29,5},
{5,5},
{5,3},
{5,4},
{5,3},
{5,2},
{5,1},
{2,1},
{2,3},
{3,2},
{4,3},
{2,4},
{2,5},
{2,2},
{2,7},-- top line
{3,7},
{4,7},
{5,7},
{6,7},
{7,7},
{9,7},
{8,7},
{10,7},
{12,7},
{11,7},
{13,7},
{14,7},
{15,7},
{16,7},
{17,7},
{18,7},
{19,7},
{20,7},
{21,7},
{22,7},
{23,7},
{25,7},
{24,7},
{26,7},
{28,7},
{27,7},
{29,7},
{30,7},
{31,7},
{2,8},-- bottom line
{3,8},
{4,8},
{6,8},
{5,8},
{8,8},
{7,8},
{9,8},
{10,8},
{12,8},
{12,8},
{11,8},
{13,8},
{15,8},
{14,8},
{16,8},
{18,8},
{17,8},
{19,8},
{20,8},
{22,8},
{21,8},
{23,8},
{24,8},
{25,8},
{26,8},
{27,8},
{28,8},
{29,8},
{30,8},
{31,8},
}




convolute = function(p, t)
    t = t - 0.2
    t = math.min(1, math.max(0, t))

    
    local dx = ((p[1]/31)-0.5)*2
    local dy = ((p[2]/8)-0.5)*2
    local d = (dx^2 + dy^2)^0.5

    local f = 100*(d+0.1)

    return {
        p[1] +  t*f*math.sin(20*t *(d)),
        p[2] +  t*f*math.cos(20*t *(d)),
    }
end;

ticks = 0
delayTime = 120
animLength = 180

onTick = function()
    ticks = (ticks + 1) % (animLength + 80)
end;

onDraw = function()
    local cx,cy = screen.getWidth()/2 - 17, screen.getHeight()/2 - 4
    local t = 1-((ticks)/ animLength)^3
    for i=1,#px do
        if t < 0.2 and i >= 116 then
            screen.setColor(100,255,100)
        elseif t < 0.2 and i >= 86 then
            screen.setColor(255,165,50)
        else
        screen.setColor(255,255,255)
        end
        local p = convolute(px[i], t)
        screen.drawCircleF(cx + p[1] + 0.5, cy+p[2] + 0.5, 0.5)
    end
end;